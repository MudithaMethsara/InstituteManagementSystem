<?xml version="1.0" encoding="UTF-8"?>
<project name="InstituteManagementSystem" default="jar" basedir=".">
    <description>
        Builds, packages, and runs the Institute Management System project.
    </description>

    <!-- ===================================================================== -->
    <!-- Project Properties                                                    -->
    <!-- ===================================================================== -->
    <property name="app.name" value="InstituteManagementSystem"/>
    <property name="app.version" value="1.0.0"/>
    <property name="main.class" value="com.institute.app.Main"/>

    <!-- Source and library directories -->
    <property name="src.dir" value="src"/>
    <property name="lib.dir" value="lib"/>
    <property name="resources.dir" value="resources"/>

    <!-- Build and distribution directories -->
    <property name="build.dir" value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="dist.dir" value="dist"/>
    <property name="dist.lib.dir" value="${dist.dir}/lib"/>

    <!-- Final JAR file name and path -->
    <property name="jar.name" value="${app.name}-${app.version}.jar"/>
    <property name="jar.path" value="${dist.dir}/${jar.name}"/>

    <!-- ===================================================================== -->
    <!-- Classpath Definitions                                                 -->
    <!-- ===================================================================== -->

    <!-- Define the classpath for compilation -->
    <path id="project.classpath">
        <fileset dir="${lib.dir}" includes="*.jar"/>
    </path>

    <!--
      Create a space-separated string of all library JARs.
      This is used for the 'Class-Path' attribute in the manifest file.
      The path is relative to the final JAR's location.
    -->
    <pathconvert property="manifest.classpath" pathsep=" ">
        <path refid="project.classpath"/>
        <chainedmapper>
            <flattenmapper/>
            <globmapper from="*" to="lib/*"/>
        </chainedmapper>
    </pathconvert>

    <!-- ===================================================================== -->
    <!-- Build Targets                                                         -->
    <!-- ===================================================================== -->

    <!-- Target: clean -->
    <target name="clean" description="Deletes the build and dist directories to start fresh.">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>

    <!-- Target: init -->
    <target name="init" description="Creates the necessary build and dist directories.">
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${dist.lib.dir}"/>
    </target>

    <!-- Target: compile -->
    <target name="compile" depends="init" description="Compiles the Java source code and copies resources.">
        <echo message="Compiling ${src.dir} to ${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="project.classpath" includeantruntime="false" debug="true">
            <!-- Show detailed information on compilation warnings -->
            <compilerarg value="-Xlint:all"/>
        </javac>

        <!--
          Copy all non-Java files from the source directory (e.g., .properties)
          to the classes directory, preserving the package structure.
        -->
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}" excludes="**/*.java"/>
        </copy>

        <!--
          Copy all external resources (icons, reports, etc.) into the root of the
          classes directory, so they can be loaded from the classpath.
        -->
        <copy todir="${classes.dir}">
            <fileset dir="${resources.dir}"/>
        </copy>
    </target>

    <!-- Target: jar (default) -->
    <target name="jar" depends="compile" description="Packages the application into an executable JAR file.">
        <echo message="Creating executable JAR: ${jar.path}"/>
        <jar destfile="${jar.path}" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
                <attribute name="Class-Path" value="${manifest.classpath}"/>
            </manifest>
        </jar>

        <!-- Copy the required libraries to the dist/lib folder -->
        <copy todir="${dist.lib.dir}">
            <fileset dir="${lib.dir}"/>
        </copy>

        <echo message="Build successful!"/>
        <echo message="To run the application, navigate to the '${dist.dir}' directory and use the command:"/>
        <echo message="java -jar ${jar.name}"/>
    </target>

    <!-- Target: run -->
    <target name="run" depends="jar" description="Runs the application from the created JAR.">
        <java jar="${jar.path}" fork="true"/>
    </target>

</project>
